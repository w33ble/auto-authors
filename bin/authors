#!/usr/bin/env node

/* eslint no-console: 0 */

const { writeFileSync } = require('fs');
const mri = require('mri');
const help = require('mri-help');
const { githubAuthors } = require('../');
const compileTemplate = require('../src/template');
const pkg = require('../package.json');

const mriConfig = {
  boolean: ['version'],
  alias: {
    version: ['v'],
    template: ['t'],
    output: ['o'],
  },
  default: {
    template: 'compact',
    output: 'AUTHORS.md',
  },
  help: {
    '@command': 'auto-authors',
    '@description': pkg.description,
    template: 'Template to use, short name or path to custom template',
    output: 'File to write the authors output to',
  },
};

(function cli() {
  const args = mri(process.argv.slice(2), help(mriConfig));

  if (args.version) {
    console.log(`v${pkg.version}`);
    return;
  }

  const template = Array.isArray(args.template) ? args.template[0] : args.template;
  const output = Array.isArray(args.output) ? args.output[0] : args.output;

  githubAuthors()
    .then(a => compileTemplate(template, { authors: a }))
    .then(out => writeFileSync(output, out, 'utf8'))
    .catch(err => console.error(err));
})();
